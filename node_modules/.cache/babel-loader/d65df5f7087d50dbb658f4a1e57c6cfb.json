{"ast":null,"code":"var _jsxFileName = \"/home/rupak/Desktop/projects/quiz app/quiz_noob/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Intro from './intro_board';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Game from './game';\nimport Score from './scoreboard';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport './css/quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var player = null;\n  var q_data = null;\n  var corr_ans = null;\n  var count_q = 0;\n  var stat = 0;\n  var [g_ini, g_sw] = useState( /*#__PURE__*/_jsxDEV(Intro, {\n    play_f: () => {\n      show_quizes();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 31\n  }, this));\n  var [n_clock, clock] = useState(null); //EXTRACT THE VALUES FROM FRONTEND AND FETCH DATA FROM API ACCORDINGLY\n\n  var show_quizes = async () => {\n    var dif_sel = document.getElementById('diff_val').value;\n    var top_sel = document.getElementById('topic_val').value;\n    player = document.getElementById('name').value;\n    g_sw( /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"warning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this));\n    await fetch('https://opentdb.com/api.php?amount=10&category=' + top_sel + '&difficulty=' + dif_sel + '&type=multiple').then(res => res.json()).then(data => {\n      q_data = data.results;\n    });\n    game(q_data, count_q);\n  }; //CHECK THE RESULT AFTER ALL THE 10 QUESTIONS ATTENDED\n\n\n  var res = answer => {\n    if (corr_ans === answer) {\n      stat += 1;\n      clock(null);\n    }\n\n    console.log(count_q);\n\n    if (count_q === 9) {\n      clock(null);\n      result();\n    } else {\n      clock(null);\n      count_q += 1;\n      game(q_data, count_q);\n    }\n  }; //THE GAME LOGIC\n\n\n  var game = (questions, counter) => {\n    //SEGREGATING DATA(ARRANGING WRONG AND RIGHT ANSWER RANDOMLY)\n    var data_q = [];\n    var corr_place = Math.floor(Math.random() * 4);\n    var count = 0;\n\n    for (var j = 0; j < 4; j++) {\n      if (j !== corr_place) {\n        data_q.push(questions[counter].incorrect_answers[count]);\n        count++;\n      } else {\n        data_q.push(questions[counter].correct_answer);\n      }\n    }\n\n    corr_ans = questions[counter].correct_answer; //RENDER THE GAME COMPONENT\n\n    g_sw( /*#__PURE__*/_jsxDEV(Game, {\n      p_name: player,\n      q_quiz: questions[counter].question,\n      a_1: data_q[0],\n      a_2: data_q[1],\n      a_3: data_q[2],\n      a_4: data_q[3],\n      chk_ans1: () => {\n        chk_ans1();\n      },\n      chk_ans2: () => {\n        chk_ans2();\n      },\n      chk_ans3: () => {\n        chk_ans3();\n      },\n      chk_ans4: () => {\n        chk_ans4();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }, this)); //stopwatch\n\n    var rem_time = 30;\n\n    var timer = () => {\n      if (rem_time === -1) {\n        rem_time = 30;\n        clearTimeout();\n        res(\"no-answer##\");\n      } else {\n        rem_time--;\n        console.log(rem_time);\n      }\n    };\n\n    var time = setInterval(timer(), 1000); //BUTTON EVENTS (REFLECTS VALUE TO res())\n\n    var chk_ans1 = () => {\n      var answer = document.getElementById('game_but1').name;\n      res(answer);\n    };\n\n    var chk_ans2 = () => {\n      var answer = document.getElementById('game_but2').name;\n      res(answer);\n    };\n\n    var chk_ans3 = () => {\n      var answer = document.getElementById('game_but3').name;\n      res(answer);\n    };\n\n    var chk_ans4 = () => {\n      var answer = document.getElementById('game_but4').name;\n      res(answer);\n    };\n  }; //SCOREBORD RENDERER\n\n\n  var result = () => {\n    if (stat === 9 || stat === 10) {\n      g_sw( /*#__PURE__*/_jsxDEV(Score, {\n        marks: stat,\n        end_msg: \"EXCELLENT WORK!!!\",\n        reset: () => reset()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this));\n    } else if (stat >= 5 && stat < 9) {\n      g_sw( /*#__PURE__*/_jsxDEV(Score, {\n        marks: stat,\n        end_msg: \"GOOD JOB!!\",\n        reset: () => reset()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this));\n    } else {\n      g_sw( /*#__PURE__*/_jsxDEV(Score, {\n        marks: stat,\n        end_msg: \"IT'S ALRIGHT\",\n        reset: () => reset()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this));\n    }\n  }; //RESET ALL VALUES AND RENDER BACK TO INTRO PAGE\n\n\n  var reset = () => {\n    player = null;\n    q_data = null;\n    corr_ans = null;\n    count_q = 0;\n    stat = 0;\n    g_sw( /*#__PURE__*/_jsxDEV(Intro, {\n      play_f: () => {\n        show_quizes();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 8\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [n_clock, g_ini]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"/1qpyWIPLQB8tTJ2iYP0nakD0T0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rupak/Desktop/projects/quiz app/quiz_noob/src/App.js"],"names":["React","useState","Intro","Spinner","Game","Score","CountdownCircleTimer","App","player","q_data","corr_ans","count_q","stat","g_ini","g_sw","show_quizes","n_clock","clock","dif_sel","document","getElementById","value","top_sel","fetch","then","res","json","data","results","game","answer","console","log","result","questions","counter","data_q","corr_place","Math","floor","random","count","j","push","incorrect_answers","correct_answer","question","chk_ans1","chk_ans2","chk_ans3","chk_ans4","rem_time","timer","clearTimeout","time","setInterval","name","reset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Intro from './intro_board'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Game from './game'\nimport Score from './scoreboard'\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport './css/quiz.css'\n\nfunction App() {\n\tvar player = null\n\tvar q_data = null;\n\tvar corr_ans = null;\n\tvar count_q = 0;\n\tvar stat = 0;\n\tvar [g_ini, g_sw] = useState(<Intro play_f={() => { show_quizes() }} />)\n\tvar [n_clock, clock] = useState(null);\n\n\n\t//EXTRACT THE VALUES FROM FRONTEND AND FETCH DATA FROM API ACCORDINGLY\n\n\n\tvar show_quizes = async () => {\n\t\tvar dif_sel = document.getElementById('diff_val').value;\n\t\tvar top_sel = document.getElementById('topic_val').value;\n\t\tplayer = document.getElementById('name').value;\n\t\tg_sw(<Spinner animation=\"border\" variant=\"warning\" />)\n\t\tawait fetch('https://opentdb.com/api.php?amount=10&category=' + top_sel + '&difficulty=' + dif_sel + '&type=multiple')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => { q_data = data.results; });\n\t\tgame(q_data, count_q);\n\t}\n\n\n\t//CHECK THE RESULT AFTER ALL THE 10 QUESTIONS ATTENDED\n\n\tvar res = (answer) => {\n\t\tif (corr_ans === answer) {\n\t\t\tstat += 1;\n\t\t\tclock(null);\n\t\t}\n\t\tconsole.log(count_q);\n\t\tif (count_q === 9) {\n\t\t\tclock(null);\n\t\t\tresult();\n\t\t}\n\t\telse {\n\t\t\tclock(null);\n\t\t\tcount_q += 1;\n\t\t\tgame(q_data, count_q);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\t//THE GAME LOGIC\n\n\n\tvar game = (questions, counter) => {\n\n\t\t//SEGREGATING DATA(ARRANGING WRONG AND RIGHT ANSWER RANDOMLY)\n\n\n\t\tvar data_q = [];\n\t\tvar corr_place = Math.floor(Math.random() * 4);\n\t\tvar count = 0;\n\t\tfor (var j = 0; j < 4; j++) {\n\t\t\tif (j !== corr_place) {\n\t\t\t\tdata_q.push(questions[counter].incorrect_answers[count])\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdata_q.push(questions[counter].correct_answer);\n\t\t\t}\n\t\t}\n\t\tcorr_ans = questions[counter].correct_answer;\n\n\n\n\t\t//RENDER THE GAME COMPONENT\n\n\n\t\tg_sw(<Game\n\t\t\tp_name={player}\n\t\t\tq_quiz={questions[counter].question}\n\t\t\ta_1={data_q[0]}\n\t\t\ta_2={data_q[1]}\n\t\t\ta_3={data_q[2]}\n\t\t\ta_4={data_q[3]}\n\t\t\tchk_ans1={() => { chk_ans1() }}\n\t\t\tchk_ans2={() => { chk_ans2() }}\n\t\t\tchk_ans3={() => { chk_ans3() }}\n\t\t\tchk_ans4={() => { chk_ans4() }}\n\t\t/>)\n\n\n\n\n\t\t//stopwatch\n\n\t\tvar rem_time = 30;\n\n\t\tvar timer = () => {\n\t\t\tif (rem_time === -1) {\n\t\t\t\trem_time = 30;\n\t\t\t\tclearTimeout();\n\t\t\t\tres(\"no-answer##\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\trem_time--;\n\t\t\t\tconsole.log(rem_time);\n\t\t\t}\n\n\t\t}\n\t\tvar time = setInterval(timer(), 1000);\n\n\t\t//BUTTON EVENTS (REFLECTS VALUE TO res())\n\n\t\tvar chk_ans1 = () => {\n\t\t\tvar answer = document.getElementById('game_but1').name;\n\t\t\tres(answer);\n\t\t}\n\n\t\tvar chk_ans2 = () => {\n\t\t\tvar answer = document.getElementById('game_but2').name;\n\t\t\tres(answer);\n\t\t}\n\n\t\tvar chk_ans3 = () => {\n\t\t\tvar answer = document.getElementById('game_but3').name;\n\t\t\tres(answer);\n\t\t}\n\n\t\tvar chk_ans4 = () => {\n\t\t\tvar answer = document.getElementById('game_but4').name;\n\t\t\tres(answer);\n\t\t}\n\n\n\t}\n\n\t//SCOREBORD RENDERER\n\n\tvar result = () => {\n\t\tif (stat === 9 || stat === 10) {\n\t\t\tg_sw(<Score\n\t\t\t\tmarks={stat}\n\t\t\t\tend_msg=\"EXCELLENT WORK!!!\"\n\t\t\t\treset={() => reset()}\n\t\t\t/>)\n\t\t}\n\t\telse if (stat >= 5 && stat < 9) {\n\t\t\tg_sw(<Score\n\t\t\t\tmarks={stat}\n\t\t\t\tend_msg=\"GOOD JOB!!\"\n\t\t\t\treset={() => reset()}\n\t\t\t/>)\n\t\t}\n\t\telse {\n\t\t\tg_sw(<Score\n\t\t\t\tmarks={stat}\n\t\t\t\tend_msg=\"IT'S ALRIGHT\"\n\t\t\t\treset={() => reset()}\n\t\t\t/>)\n\t\t}\n\n\t}\n\n\t//RESET ALL VALUES AND RENDER BACK TO INTRO PAGE\n\n\tvar reset = () => {\n\t\tplayer = null\n\t\tq_data = null;\n\t\tcorr_ans = null;\n\t\tcount_q = 0;\n\t\tstat = 0;\n\t\tg_sw(<Intro play_f={() => { show_quizes() }} />)\n\t}\n\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{n_clock}\n\t\t\t{g_ini}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}